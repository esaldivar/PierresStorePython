schema {
    query: Query
    mutation: Mutation
}

type Product {
    productId: ID!
    productName: String!
    imageUrl: String!
    price: Int!
    information: String!
    season: [String]
    category: [String]!
    quantity: String!
}

type ProductResult {
    success: Boolean!
    errors: [String]
    product: Product
}

type ProductsResult {
    success: Boolean!
    errors: [String]
    products: [Product]
}

type User {
    userId: ID!
    firstName: String!
    lastName: String!
    phoneNumber: String!
    emailAddress: String!
    password: String!
}

type UserResult {
    success: Boolean!
    errors: [String]
    user: User
}

type UsersResult {
    success: Boolean!
    errors: [String]
    users: [User]
}

type Favorite {
    favoriteId: ID!
    userId: Int!
    productName: String!
}

type FavoriteResult {
    success: Boolean!
    errors: [String]
    favorite: Favorite
}

type FavoritesResult {
    success: Boolean!
    errors: [String]
    favorites: [Favorite]
}

type Query {
    products: ProductsResult!
    product(productName: String): ProductResult!
    users: UsersResult!
    user(emailAddress: String, password: String): UserResult!
    favorites(userId: Int!): FavoritesResult!
}

type DeleteProductResult {
    success: Boolean!
    errors: [String]
}

type Mutation {
    createProduct(productName: String!, imageUrl: String!, price: Int!, information: String! , season: [String], category: [String]! , quantity: String!): ProductResult!
    deleteProduct(productId: ID!): DeleteProductResult!
    createUser(firstName: String!, lastName: String!, phoneNumber: String!, emailAddress: String!, password: String!): UserResult!
}
